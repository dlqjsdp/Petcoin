<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    포인트 Mapper.xml
    @author : sehui
    @fileName : PointMapper.xml
    @since : 250827
    @history
     - 250827 | sehui | 회원별 포인트 전체 내역 조회 기능 추가
     - 250827 | 민병흠 | 마이페이지 포인트 조회 기능 추가
-->

<mapper namespace="com.petcoin.mapper.PointMapper">

    <resultMap id="pointHisMap" type="com.petcoin.domain.PointHistoryVO">
        <id property="historyId" column="history_id" />
        <result property="memberId" column="member_id" />
        <result property="pointChange" column="point_change" />
        <result property="pointBalance" column="point_balance" />
        <result property="actionType" column="action_type" />
        <result property="description" column="description" />
        <result property="createdAt" column="created_at" />
    </resultMap>

    <!-- 회원별 포인트 전체 내역 조회 -->
    <select id="findPointHistoryById" resultMap="pointHisMap">
        SELECT
            history_id,
            member_id,
            point_change,
            point_balance,
            action_type,
            description,
            created_at
        FROM point_history
        WHERE member_id = #{memberId}
    </select>

    <select id="sumByType" resultType="long">
        SELECT COALESCE(SUM(amount),0)
        FROM point_history
        WHERE member_id = #{memberId}
          AND type = #{type}
    </select>

    <select id="sumRefundHold" resultType="long">
        SELECT COALESCE(SUM(points),0)
        FROM point_refund_request
        WHERE member_id = #{memberId}
          AND status IN ('REQUESTED','APPROVED')
    </select>

    <sql id="history_where">
        WHERE ph.member_id = #{memberId}
        <if test="from != null">AND ph.created_at &gt;= #{from}</if>
        <if test="to != null">AND ph.created_at &lt; DATE_ADD(#{to}, INTERVAL 1 DAY)</if>
        <if test="type != null">AND ph.type = #{type}</if>
    </sql>

    <select id="selectHistoryPaged" resultType="com.petcoin.dto.PointHistoryDto">
        SELECT ph.point_id AS pointId,
        ph.type,
        ph.amount,
        ph.reason,
        ph.created_at AS createdAt
        FROM point_history ph
        <include refid="history_where"/>
        ORDER BY ph.created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countHistory" resultType="long">
        SELECT COUNT(*) FROM point_history ph
        <include refid="history_where"/>
    </select>

    <select id="sumEarnByFilter" resultType="long">
        SELECT COALESCE(SUM(amount),0)
        FROM point_history ph
        WHERE ph.member_id = #{memberId}
        AND ph.type = 'EARN'
        <if test="from != null">AND ph.created_at &gt;= #{from}</if>
        <if test="to != null">AND ph.created_at &lt; DATE_ADD(#{to}, INTERVAL 1 DAY)</if>
    </select>

    <select id="sumUseByFilter" resultType="long">
        SELECT COALESCE(SUM(amount),0)
        FROM point_history ph
        WHERE ph.member_id = #{memberId}
        AND ph.type = 'USE'
        <if test="from != null">AND ph.created_at &gt;= #{from}</if>
        <if test="to != null">AND ph.created_at &lt; DATE_ADD(#{to}, INTERVAL 1 DAY)</if>
    </select>

</mapper>